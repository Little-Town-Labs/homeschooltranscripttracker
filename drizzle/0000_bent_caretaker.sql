CREATE TYPE "public"."course_level" AS ENUM('Regular', 'Honors', 'Advanced Placement', 'Dual Enrollment', 'College Prep');--> statement-breakpoint
CREATE TYPE "public"."gpa_scale" AS ENUM('4.0', '5.0');--> statement-breakpoint
CREATE TYPE "public"."grade" AS ENUM('A', 'B', 'C', 'D', 'F');--> statement-breakpoint
CREATE TYPE "public"."subject" AS ENUM('English', 'Mathematics', 'Science', 'Social Studies', 'Foreign Language', 'Fine Arts', 'Physical Education', 'Career/Technical Education', 'Elective', 'Other');--> statement-breakpoint
CREATE TYPE "public"."subscription_status" AS ENUM('trial', 'active', 'past_due', 'cancelled', 'suspended');--> statement-breakpoint
CREATE TYPE "public"."test_type" AS ENUM('SAT', 'ACT', 'PSAT', 'AP', 'CLEP', 'SAT Subject', 'State Assessment', 'Other');--> statement-breakpoint
CREATE TYPE "public"."user_role" AS ENUM('super_admin', 'support_admin', 'primary_guardian', 'guardian', 'student');--> statement-breakpoint
CREATE TABLE "app_account" (
	"user_id" varchar(255) NOT NULL,
	"type" varchar(255) NOT NULL,
	"provider" varchar(255) NOT NULL,
	"provider_account_id" varchar(255) NOT NULL,
	"refresh_token" text,
	"access_token" text,
	"expires_at" integer,
	"token_type" varchar(255),
	"scope" varchar(255),
	"id_token" text,
	"session_state" varchar(255),
	CONSTRAINT "app_account_provider_provider_account_id_pk" PRIMARY KEY("provider","provider_account_id")
);
--> statement-breakpoint
CREATE TABLE "app_audit_log" (
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"tenant_id" uuid,
	"user_id" varchar(255),
	"action" varchar(100) NOT NULL,
	"resource" varchar(100) NOT NULL,
	"resource_id" uuid,
	"old_values" json,
	"new_values" json,
	"ip_address" varchar(45),
	"user_agent" text,
	"timestamp" timestamp with time zone DEFAULT now()
);
--> statement-breakpoint
CREATE TABLE "app_course" (
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"tenant_id" uuid NOT NULL,
	"student_id" uuid NOT NULL,
	"name" varchar(255) NOT NULL,
	"subject" "subject" NOT NULL,
	"level" "course_level" DEFAULT 'Regular',
	"credit_hours" numeric(3, 2) DEFAULT '1.0',
	"academic_year" varchar(20) NOT NULL,
	"description" text,
	"provider" varchar(255),
	"created_at" timestamp with time zone DEFAULT now(),
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE "app_grade" (
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"course_id" uuid NOT NULL,
	"semester" varchar(50) NOT NULL,
	"grade" "grade" NOT NULL,
	"percentage" numeric(5, 2),
	"gpa_points" numeric(3, 2) NOT NULL,
	"created_by" varchar(255),
	"created_at" timestamp with time zone DEFAULT now(),
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE "app_invitation" (
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"tenant_id" uuid NOT NULL,
	"email" varchar(255) NOT NULL,
	"role" "user_role" NOT NULL,
	"token" varchar(255) NOT NULL,
	"student_id" uuid,
	"status" varchar(50) DEFAULT 'pending',
	"expires_at" timestamp with time zone NOT NULL,
	"accepted_at" timestamp with time zone,
	"created_by" varchar(255),
	"created_at" timestamp with time zone DEFAULT now(),
	CONSTRAINT "app_invitation_token_unique" UNIQUE("token")
);
--> statement-breakpoint
CREATE TABLE "app_post" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "app_post_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(256),
	"created_by_id" varchar(255) NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE "app_session" (
	"session_token" varchar(255) PRIMARY KEY NOT NULL,
	"user_id" varchar(255) NOT NULL,
	"expires" timestamp with time zone NOT NULL
);
--> statement-breakpoint
CREATE TABLE "app_student" (
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"tenant_id" uuid NOT NULL,
	"first_name" varchar(100) NOT NULL,
	"last_name" varchar(100) NOT NULL,
	"email" varchar(255),
	"date_of_birth" date,
	"graduation_year" integer NOT NULL,
	"gpa_scale" "gpa_scale" DEFAULT '4.0',
	"user_id" varchar(255),
	"created_at" timestamp with time zone DEFAULT now(),
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE "app_tenant" (
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"name" varchar(255) NOT NULL,
	"primary_email" varchar(255) NOT NULL,
	"address" text,
	"city" varchar(100),
	"state" varchar(50),
	"zip_code" varchar(20),
	"phone" varchar(20),
	"subscription_status" "subscription_status" DEFAULT 'trial',
	"subscription_id" varchar(255),
	"customer_id" varchar(255),
	"trial_ends_at" timestamp with time zone,
	"created_at" timestamp with time zone DEFAULT now(),
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE "app_test_score" (
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"tenant_id" uuid NOT NULL,
	"student_id" uuid NOT NULL,
	"test_type" "test_type" NOT NULL,
	"test_date" date NOT NULL,
	"scores" json NOT NULL,
	"test_center" varchar(255),
	"notes" text,
	"created_at" timestamp with time zone DEFAULT now(),
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE "app_user" (
	"id" varchar(255) PRIMARY KEY NOT NULL,
	"tenant_id" uuid,
	"name" varchar(255),
	"email" varchar(255) NOT NULL,
	"email_verified" timestamp with time zone,
	"image" varchar(255),
	"role" "user_role" DEFAULT 'guardian',
	"is_active" boolean DEFAULT true,
	"created_at" timestamp with time zone DEFAULT now(),
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE "app_verification_token" (
	"identifier" varchar(255) NOT NULL,
	"token" varchar(255) NOT NULL,
	"expires" timestamp with time zone NOT NULL,
	CONSTRAINT "app_verification_token_identifier_token_pk" PRIMARY KEY("identifier","token")
);
--> statement-breakpoint
ALTER TABLE "app_account" ADD CONSTRAINT "app_account_user_id_app_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."app_user"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "app_audit_log" ADD CONSTRAINT "app_audit_log_tenant_id_app_tenant_id_fk" FOREIGN KEY ("tenant_id") REFERENCES "public"."app_tenant"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "app_audit_log" ADD CONSTRAINT "app_audit_log_user_id_app_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."app_user"("id") ON DELETE set null ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "app_course" ADD CONSTRAINT "app_course_tenant_id_app_tenant_id_fk" FOREIGN KEY ("tenant_id") REFERENCES "public"."app_tenant"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "app_course" ADD CONSTRAINT "app_course_student_id_app_student_id_fk" FOREIGN KEY ("student_id") REFERENCES "public"."app_student"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "app_grade" ADD CONSTRAINT "app_grade_course_id_app_course_id_fk" FOREIGN KEY ("course_id") REFERENCES "public"."app_course"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "app_grade" ADD CONSTRAINT "app_grade_created_by_app_user_id_fk" FOREIGN KEY ("created_by") REFERENCES "public"."app_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "app_invitation" ADD CONSTRAINT "app_invitation_tenant_id_app_tenant_id_fk" FOREIGN KEY ("tenant_id") REFERENCES "public"."app_tenant"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "app_invitation" ADD CONSTRAINT "app_invitation_student_id_app_student_id_fk" FOREIGN KEY ("student_id") REFERENCES "public"."app_student"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "app_invitation" ADD CONSTRAINT "app_invitation_created_by_app_user_id_fk" FOREIGN KEY ("created_by") REFERENCES "public"."app_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "app_post" ADD CONSTRAINT "app_post_created_by_id_app_user_id_fk" FOREIGN KEY ("created_by_id") REFERENCES "public"."app_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "app_session" ADD CONSTRAINT "app_session_user_id_app_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."app_user"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "app_student" ADD CONSTRAINT "app_student_tenant_id_app_tenant_id_fk" FOREIGN KEY ("tenant_id") REFERENCES "public"."app_tenant"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "app_student" ADD CONSTRAINT "app_student_user_id_app_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."app_user"("id") ON DELETE set null ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "app_test_score" ADD CONSTRAINT "app_test_score_tenant_id_app_tenant_id_fk" FOREIGN KEY ("tenant_id") REFERENCES "public"."app_tenant"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "app_test_score" ADD CONSTRAINT "app_test_score_student_id_app_student_id_fk" FOREIGN KEY ("student_id") REFERENCES "public"."app_student"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "app_user" ADD CONSTRAINT "app_user_tenant_id_app_tenant_id_fk" FOREIGN KEY ("tenant_id") REFERENCES "public"."app_tenant"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
CREATE INDEX "account_user_id_idx" ON "app_account" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX "audit_log_tenant_idx" ON "app_audit_log" USING btree ("tenant_id");--> statement-breakpoint
CREATE INDEX "audit_log_user_idx" ON "app_audit_log" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX "audit_log_resource_idx" ON "app_audit_log" USING btree ("resource","resource_id");--> statement-breakpoint
CREATE INDEX "audit_log_timestamp_idx" ON "app_audit_log" USING btree ("timestamp");--> statement-breakpoint
CREATE INDEX "course_tenant_idx" ON "app_course" USING btree ("tenant_id");--> statement-breakpoint
CREATE INDEX "course_student_idx" ON "app_course" USING btree ("student_id");--> statement-breakpoint
CREATE INDEX "course_academic_year_idx" ON "app_course" USING btree ("academic_year");--> statement-breakpoint
CREATE INDEX "grade_course_idx" ON "app_grade" USING btree ("course_id");--> statement-breakpoint
CREATE INDEX "grade_semester_idx" ON "app_grade" USING btree ("semester");--> statement-breakpoint
CREATE INDEX "invitation_tenant_idx" ON "app_invitation" USING btree ("tenant_id");--> statement-breakpoint
CREATE INDEX "invitation_email_idx" ON "app_invitation" USING btree ("email");--> statement-breakpoint
CREATE INDEX "invitation_token_idx" ON "app_invitation" USING btree ("token");--> statement-breakpoint
CREATE INDEX "invitation_expires_idx" ON "app_invitation" USING btree ("expires_at");--> statement-breakpoint
CREATE INDEX "created_by_idx" ON "app_post" USING btree ("created_by_id");--> statement-breakpoint
CREATE INDEX "name_idx" ON "app_post" USING btree ("name");--> statement-breakpoint
CREATE INDEX "session_user_id_idx" ON "app_session" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX "student_tenant_idx" ON "app_student" USING btree ("tenant_id");--> statement-breakpoint
CREATE INDEX "student_graduation_year_idx" ON "app_student" USING btree ("graduation_year");--> statement-breakpoint
CREATE INDEX "test_score_tenant_idx" ON "app_test_score" USING btree ("tenant_id");--> statement-breakpoint
CREATE INDEX "test_score_student_idx" ON "app_test_score" USING btree ("student_id");--> statement-breakpoint
CREATE INDEX "test_score_type_date_idx" ON "app_test_score" USING btree ("test_type","test_date");--> statement-breakpoint
CREATE INDEX "user_tenant_idx" ON "app_user" USING btree ("tenant_id");--> statement-breakpoint
CREATE INDEX "user_email_idx" ON "app_user" USING btree ("email");--> statement-breakpoint
CREATE INDEX "user_role_idx" ON "app_user" USING btree ("role");